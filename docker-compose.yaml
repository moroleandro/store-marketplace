version: '3'

services:

## Services 

    frontend-store:
        build: ./frontend-store/
        entrypoint: .docker/entrypoint.sh
        container_name: frontend-store
        ports:
            - 3001:3000
        depends_on:
            - db            
        volumes:
            - ./frontend-store:/home/node/app

    app-checkout:
        build: ./app-checkout/
        container_name: app-checkout
        ports:
            - "50052:50051"
        volumes:
            - ./app-checkout/:/go/src/
        depends_on:
            - db      
            - kafka
            - control-center   
        extra_hosts:
            - "host.docker.internal:172.17.0.1"

    api-store:
        build: ./api-store/
        entrypoint: .docker/entrypoint.sh
        container_name: api-store
        ports:
            - 3000:3000
        volumes:
            - ./api-store:/home/node/app
        depends_on:
            - db
        extra_hosts: 
            - 'host.docker.internal:172.17.0.1'

## DB            
            
    db:
        image: postgres:9.4
        container_name: db-store
        restart: always
        tty: true
        volumes:
            - ./db/.pgdata:/var/lib/postgresql/data
            - ./db/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
        environment:
            - POSTGRES_PASSWORD=root
        ports:
            - "5432:5432"
        extra_hosts:
            - "host.docker.internal:172.17.0.1"
    
    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin
        tty: true
        environment:
            - PGADMIN_DEFAULT_EMAIL=admin@user.com
            - PGADMIN_DEFAULT_PASSWORD=123456
        ports:
            - "9000:80"
        depends_on:
            - db
        extra_hosts:
            - "host.docker.internal:172.17.0.1"

## Kafka

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
    
    kafka:
        image: confluentinc/cp-kafka:latest
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            - 9092:9092
            - 9094:9094
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
        extra_hosts:
            - "host.docker.internal:172.17.0.1"
    
    kafka-topics-generator:
        image: confluentinc/cp-kafka:latest
        container_name: kafka-topics-generator
        depends_on:
            - kafka
        command: >
            bash -c
            "sleep 5s &&
            kafka-topics --create --topic=payments --if-not-exists --bootstrap-server=kafka:9092"
            
    control-center:
        image: confluentinc/cp-enterprise-control-center:6.0.1
        hostname: control-center
        container_name: control-center
        depends_on:
            - kafka
        ports:
            - "9021:9021"
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            PORT: 9021            